version: '3.8'

services:
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - letsencrypt:/etc/letsencrypt
      - certs:/certs
    entrypoint: >
      /bin/sh -c '
      apt install python3-pip;
      pip3 install certbot-dns-cloudflare;
      echo "dns_cloudflare_api_token = $CF_API_TOKEN" > /etc/letsencrypt/cloudflare.ini;
      chmod 600 /etc/letsencrypt/cloudflare.ini;
      certbot certonly --dns-cloudflare --dns-cloudflare-credentials /etc/letsencrypt/cloudflare.ini
      --non-interactive --agree-tos --email $EMAIL -d $DOMAIN;
      cp -f $(find /etc/letsencrypt/ -name "fullchain?.pem") /certs/fullchain.pem;
      cp -f $(find /etc/letsencrypt/ -name "privkey?.pem") /certs/privkey.pem'
    environment:
      - EMAIL
      - DOMAIN
      - CF_API_TOKEN

  registry:
    build:
      context: .
      dockerfile: Dockerfile
    image: ${DOCKER_REGISTRY_ADDR}:latest
    container_name: secure-registry
    ports:
      - 5001:5000
    environment:
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/fullchain.pem
      REGISTRY_HTTP_TLS_KEY: /certs/privkey.pem
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
    volumes:
      - registry-data:/var/lib/registry
      - ./config/htpasswd:/auth/htpasswd
      - certs:/certs
    entrypoint: >
      /bin/sh -c '
      USERNAME=${USERNAME:-admin};
      PASSWORD=${PASSWORD:-password};
      if [ ! -f /auth/htpasswd ]; then
          htpasswd -Bbn $USERNAME $PASSWORD > /auth/htpasswd;
      fi;
      registry serve /etc/docker/registry/config.yml'
    depends_on:
      - certbot

volumes:
  registry-data:
  certs:
  letsencrypt:

